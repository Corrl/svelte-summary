import{S as j,i as H,s as q,C as x,w as L,x as M,y as R,z,A as y,q as B,o as N,B as D,N as C,e as f,t as $,k as h,c as d,a as _,h as E,d as o,m as g,b as P,g as r,H as b,E as F}from"./index-26167588.js";import{S as G}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function J(k){let s,p,c,e,n=`<code class="language-html"><span class="token comment">&lt;!-- App.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> setContext <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte'</span><span class="token punctuation">;</span>

	<span class="token function">setContext</span><span class="token punctuation">(</span><span class="token string">'answer'</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`,a,i,v,m,u,I=`<code class="language-html"><span class="token comment">&lt;!-- ChildComp.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> getContext <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte'</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'answer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`;return{c(){s=f("p"),p=$("The context API provides a mechanism for components to \u2018talk\u2019 to each other without passing around data and functions as props, or dispatching lots of events."),c=h(),e=f("pre"),a=h(),i=f("p"),v=$("Context is not inherently reactive. If you need reactive values in context then you can pass a store into context, which will be reactive."),m=h(),u=f("pre"),this.h()},l(t){s=d(t,"P",{});var l=_(s);p=E(l,"The context API provides a mechanism for components to \u2018talk\u2019 to each other without passing around data and functions as props, or dispatching lots of events."),l.forEach(o),c=g(t),e=d(t,"PRE",{class:!0});var S=_(e);S.forEach(o),a=g(t),i=d(t,"P",{});var w=_(i);v=E(w,"Context is not inherently reactive. If you need reactive values in context then you can pass a store into context, which will be reactive."),w.forEach(o),m=g(t),u=d(t,"PRE",{class:!0});var T=_(u);T.forEach(o),this.h()},h(){P(e,"class","language-html"),P(u,"class","language-html")},m(t,l){r(t,s,l),b(s,p),r(t,c,l),r(t,e,l),e.innerHTML=n,r(t,a,l),r(t,i,l),b(i,v),r(t,m,l),r(t,u,l),u.innerHTML=I},p:F,d(t){t&&o(s),t&&o(c),t&&o(e),t&&o(a),t&&o(i),t&&o(m),t&&o(u)}}}function K(k){let s,p;const c=[k[0],A];let e={$$slots:{default:[J]},$$scope:{ctx:k}};for(let n=0;n<c.length;n+=1)e=x(e,c[n]);return s=new G({props:e}),{c(){L(s.$$.fragment)},l(n){M(s.$$.fragment,n)},m(n,a){R(s,n,a),p=!0},p(n,[a]){const i=a&1?z(c,[a&1&&y(n[0]),a&0&&y(A)]):{};a&2&&(i.$$scope={dirty:a,ctx:n}),s.$set(i)},i(n){p||(B(s.$$.fragment,n),p=!0)},o(n){N(s.$$.fragment,n),p=!1},d(n){D(s,n)}}}const A={layout:"section",id:"context",indent:!0,h:"context",docs:"https://svelte.dev/docs#run-time-svelte-setcontext",tutorials:["https://svelte.dev/tutorial/context-api"]};function O(k,s,p){return k.$$set=c=>{p(0,s=x(x({},s),C(c)))},s=C(s),[s]}class X extends j{constructor(s){super(),H(this,s,O,K,q,{})}}export{X as default,A as metadata};
