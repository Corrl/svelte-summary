import{S as u,i as p,s as _,C as i,w as h,x as v,y as g,z as x,A as d,q as $,o as y,B as S,N as l,e as W,t as b,c as C,a as k,h as q,d as f,g as w,H as E,E as T}from"./index-26167588.js";import{S as j}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function z(r){let e,a;return{c(){e=W("p"),a=b("The crossfade function creates a pair of transitions called send and receive. When an element is \u2018sent\u2019, it looks for a corresponding element being \u2018received\u2019, and generates a transition that transforms the element to its counterpart\u2019s position and fades it out. When an element is \u2018received\u2019, the reverse happens.")},l(s){e=C(s,"P",{});var n=k(e);a=q(n,"The crossfade function creates a pair of transitions called send and receive. When an element is \u2018sent\u2019, it looks for a corresponding element being \u2018received\u2019, and generates a transition that transforms the element to its counterpart\u2019s position and fades it out. When an element is \u2018received\u2019, the reverse happens."),n.forEach(f)},m(s,n){w(s,e,n),E(e,a)},p:T,d(s){s&&f(e)}}}function A(r){let e,a;const s=[r[0],m];let n={$$slots:{default:[z]},$$scope:{ctx:r}};for(let t=0;t<s.length;t+=1)n=i(n,s[t]);return e=new j({props:n}),{c(){h(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,o){g(e,t,o),a=!0},p(t,[o]){const c=o&1?x(s,[o&1&&d(t[0]),o&0&&d(m)]):{};o&2&&(c.$$scope={dirty:o,ctx:t}),e.$set(c)},i(t){a||($(e.$$.fragment,t),a=!0)},o(t){y(e.$$.fragment,t),a=!1},d(t){S(e,t)}}}const m={layout:"section",id:"crossfade",indent:!0,h:"crossfade",docs:"https://svelte.dev/docs#run-time-svelte-transition-crossfade",tutorials:["https://svelte.dev/tutorial/deferred-transitions"]};function B(r,e,a){return r.$$set=s=>{a(0,e=i(i({},e),l(s)))},e=l(e),[e]}class F extends u{constructor(e){super(),p(this,e,B,A,_,{})}}export{F as default,m as metadata};
