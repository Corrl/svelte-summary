import{S as v,i as g,s as y,C as i,w,x,y as $,z as b,A as r,f as E,t as j,B as A,N as m,l as d,r as O,a as S,m as h,n as k,u as M,h as l,c as q,p as C,b as u,H as D,E as H}from"./index-37ae0623.js";import{S as P}from"./Section-6b20cdf8.js";import"./index-05d60d5f.js";import"./Tutorial-0c4825ec.js";function z(c){let a,e,p,t,s=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">function</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> param</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// the node has been mounted in the DOM</span>
        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
            <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">// &#96;param&#96; has changed</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">// the node has been removed from the DOM</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">use:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;param&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`;return{c(){a=d("p"),e=O(`Actions are functions that are called when an element is created. Optionally they can have a parameter or return an
object with an update method which is called whenever the paramter changes or a destroy method that is called after the
element is unmounted.`),p=S(),t=d("pre"),this.h()},l(n){a=h(n,"P",{});var o=k(a);e=M(o,`Actions are functions that are called when an element is created. Optionally they can have a parameter or return an
object with an update method which is called whenever the paramter changes or a destroy method that is called after the
element is unmounted.`),o.forEach(l),p=q(n),t=h(n,"PRE",{class:!0});var f=k(t);f.forEach(l),this.h()},h(){C(t,"class","language-html")},m(n,o){u(n,a,o),D(a,e),u(n,p,o),u(n,t,o),t.innerHTML=s},p:H,d(n){n&&l(a),n&&l(p),n&&l(t)}}}function B(c){let a,e;const p=[c[0],_];let t={$$slots:{default:[z]},$$scope:{ctx:c}};for(let s=0;s<p.length;s+=1)t=i(t,p[s]);return a=new P({props:t}),{c(){w(a.$$.fragment)},l(s){x(a.$$.fragment,s)},m(s,n){$(a,s,n),e=!0},p(s,[n]){const o=n&1?b(p,[n&1&&r(s[0]),n&0&&r(_)]):{};n&2&&(o.$$scope={dirty:n,ctx:s}),a.$set(o)},i(s){e||(E(a.$$.fragment,s),e=!0)},o(s){j(a.$$.fragment,s),e=!1},d(s){A(a,s)}}}const _={layout:"section",id:"elemUseAction",indent:!0,h:"use:action",docs:"https://svelte.dev/docs#template-syntax-element-directives-use-action",tutorials:["https://svelte.dev/tutorial/actions","https://svelte.dev/tutorial/adding-parameters-to-actions"]};function L(c,a,e){return c.$$set=p=>{e(0,a=i(i({},a),m(p)))},a=m(a),[a]}class F extends v{constructor(a){super(),g(this,a,L,B,y,{})}}export{F as default,_ as metadata};
