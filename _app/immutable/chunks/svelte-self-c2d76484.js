import{S as x,i as $,s as y,C as _,w as S,x as w,y as E,z as C,A as f,f as b,t as j,B as q,N as u,l as m,r as d,m as p,n as v,u as h,h as c,b as z,H as i,E as A}from"./index-37ae0623.js";import{S as B}from"./Section-6b20cdf8.js";import"./index-05d60d5f.js";import"./Tutorial-0c4825ec.js";function D(l){let e,a,n,o;return{c(){e=m("p"),a=m("code"),n=d("<svelte:self>"),o=d(" allows a component to contain itself recursively.")},l(t){e=p(t,"P",{});var s=v(e);a=p(s,"CODE",{});var r=v(a);n=h(r,"<svelte:self>"),r.forEach(c),o=h(s," allows a component to contain itself recursively."),s.forEach(c)},m(t,s){z(t,e,s),i(e,a),i(a,n),i(e,o)},p:A,d(t){t&&c(e)}}}function H(l){let e,a;const n=[l[0],g];let o={$$slots:{default:[D]},$$scope:{ctx:l}};for(let t=0;t<n.length;t+=1)o=_(o,n[t]);return e=new B({props:o}),{c(){S(e.$$.fragment)},l(t){w(e.$$.fragment,t)},m(t,s){E(e,t,s),a=!0},p(t,[s]){const r=s&1?C(n,[s&1&&f(t[0]),s&0&&f(g)]):{};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){a||(b(e.$$.fragment,t),a=!0)},o(t){j(e.$$.fragment,t),a=!1},d(t){q(e,t)}}}const g={layout:"section",id:"svelteSelf",h:"<svelte:self>",docs:"https://svelte.dev/docs#template-syntax-svelte-self",tutorials:["https://svelte.dev/tutorial/svelte-self"]};function N(l,e,a){return l.$$set=n=>{a(0,e=_(_({},e),u(n)))},e=u(e),[e]}class G extends x{constructor(e){super(),$(this,e,N,H,y,{})}}export{G as default,g as metadata};
