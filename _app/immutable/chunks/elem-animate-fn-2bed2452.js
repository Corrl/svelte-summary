import{S as j,i as z,s as B,C as $,w as F,x as M,y as N,z as P,A as S,q as R,o as T,B as U,N as I,e as h,t as v,k as x,c as _,a as f,h as w,d as o,m as y,b as W,g as b,H as c,E as D}from"./index-26167588.js";import{S as G}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function J(d){let e,a,l,r,t,n,p,u,k,g,m,C=`<code class="language-html"><span class="token comment">&lt;!-- When &#96;list&#96; is reordered the animation will run--></span>
&#123;#each list as item, index (item)&#125;
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name"><span class="token namespace">animate:</span>flip</span><span class="token punctuation">></span></span>&#123;item&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
&#123;/each&#125;</code>`;return{c(){e=h("ul"),a=h("li"),l=v("An animation is triggered when the contents of a keyed each block are re-ordered."),r=x(),t=h("li"),n=v("Animations do not run when an element is added or removed, only when the index of an existing data item within the each block changes."),p=x(),u=h("li"),k=v("Animate directives must be on an element that is an immediate child of a keyed each block."),g=x(),m=h("pre"),this.h()},l(s){e=_(s,"UL",{});var i=f(e);a=_(i,"LI",{});var A=f(a);l=w(A,"An animation is triggered when the contents of a keyed each block are re-ordered."),A.forEach(o),r=y(i),t=_(i,"LI",{});var E=f(t);n=w(E,"Animations do not run when an element is added or removed, only when the index of an existing data item within the each block changes."),E.forEach(o),p=y(i),u=_(i,"LI",{});var L=f(u);k=w(L,"Animate directives must be on an element that is an immediate child of a keyed each block."),L.forEach(o),i.forEach(o),g=y(s),m=_(s,"PRE",{class:!0});var H=f(m);H.forEach(o),this.h()},h(){W(m,"class","language-html")},m(s,i){b(s,e,i),c(e,a),c(a,l),c(e,r),c(e,t),c(t,n),c(e,p),c(e,u),c(u,k),b(s,g,i),b(s,m,i),m.innerHTML=C},p:D,d(s){s&&o(e),s&&o(g),s&&o(m)}}}function K(d){let e,a;const l=[d[0],q];let r={$$slots:{default:[J]},$$scope:{ctx:d}};for(let t=0;t<l.length;t+=1)r=$(r,l[t]);return e=new G({props:r}),{c(){F(e.$$.fragment)},l(t){M(e.$$.fragment,t)},m(t,n){N(e,t,n),a=!0},p(t,[n]){const p=n&1?P(l,[n&1&&S(t[0]),n&0&&S(q)]):{};n&2&&(p.$$scope={dirty:n,ctx:t}),e.$set(p)},i(t){a||(R(e.$$.fragment,t),a=!0)},o(t){T(e.$$.fragment,t),a=!1},d(t){U(e,t)}}}const q={layout:"section",id:"elemAnimateFn",indent:!0,h:"animate:fn",docs:"https://svelte.dev/docs#template-syntax-element-directives-animate-fn",tutorials:["https://svelte.dev/tutorial/animate"]};function O(d,e,a){return d.$$set=l=>{a(0,e=$($({},e),I(l)))},e=I(e),[e]}class Z extends j{constructor(e){super(),z(this,e,O,K,B,{})}}export{Z as default,q as metadata};
