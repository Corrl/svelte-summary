import{S,i as q,s as C,C as g,w as T,x as b,y as j,z as H,A as y,q as P,o as z,B as A,N as x,e as m,t as d,k as B,c as k,a as _,h as f,d as u,m as D,b as F,g as v,H as i,E as L}from"./index-26167588.js";import{S as M}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function N(r){let a,l,t,c,s,e,p,E=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">let</span> tag <span class="token operator">=</span> <span class="token string">'div'</span><span class="token punctuation">;</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> handler<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">svelte:</span>element</span> <span class="token attr-name">this</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;tag&#125;</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;handler&#125;</span><span class="token punctuation">></span></span>Foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">svelte:</span>element</span><span class="token punctuation">></span></span></code>`;return{c(){a=m("p"),l=d("The "),t=m("code"),c=d("<svelte:element>"),s=d(" element lets you render an element of a dynamically specified type."),e=B(),p=m("pre"),this.h()},l(n){a=k(n,"P",{});var o=_(a);l=f(o,"The "),t=k(o,"CODE",{});var h=_(t);c=f(h,"<svelte:element>"),h.forEach(u),s=f(o," element lets you render an element of a dynamically specified type."),o.forEach(u),e=D(n),p=k(n,"PRE",{class:!0});var w=_(p);w.forEach(u),this.h()},h(){F(p,"class","language-html")},m(n,o){v(n,a,o),i(a,l),i(a,t),i(t,c),i(a,s),v(n,e,o),v(n,p,o),p.innerHTML=E},p:L,d(n){n&&u(a),n&&u(e),n&&u(p)}}}function O(r){let a,l;const t=[r[0],$];let c={$$slots:{default:[N]},$$scope:{ctx:r}};for(let s=0;s<t.length;s+=1)c=g(c,t[s]);return a=new M({props:c}),{c(){T(a.$$.fragment)},l(s){b(a.$$.fragment,s)},m(s,e){j(a,s,e),l=!0},p(s,[e]){const p=e&1?H(t,[e&1&&y(s[0]),e&0&&y($)]):{};e&2&&(p.$$scope={dirty:e,ctx:s}),a.$set(p)},i(s){l||(P(a.$$.fragment,s),l=!0)},o(s){z(a.$$.fragment,s),l=!1},d(s){A(a,s)}}}const $={layout:"section",id:"svelteElement",h:"<svelte:element>",docs:"https://svelte.dev/docs#template-syntax-svelte-element",tutorials:["https://svelte.dev/tutorial/svelte-element"]};function R(r,a,l){return r.$$set=t=>{l(0,a=g(g({},a),x(t)))},a=x(a),[a]}class Q extends S{constructor(a){super(),q(this,a,R,O,C,{})}}export{Q as default,$ as metadata};
