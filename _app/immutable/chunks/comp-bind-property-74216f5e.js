import{S as v,i as y,s as x,C as i,w as b,x as k,y as $,z as E,A as u,q as S,o as q,B as w,N as m,e as d,t as C,k as P,c as _,a as f,h as B,d as r,m as H,b as Y,g as c,H as j,E as z}from"./index-26167588.js";import{S as A}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function K(l){let t,n,o,s,a='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Keypad</span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;pin&#125;/</span><span class="token punctuation">></span></span></code>';return{c(){t=d("p"),n=C("You can bind to component props using the same syntax as for elements."),o=P(),s=d("pre"),this.h()},l(e){t=_(e,"P",{});var p=f(t);n=B(p,"You can bind to component props using the same syntax as for elements."),p.forEach(r),o=H(e),s=_(e,"PRE",{class:!0});var g=f(s);g.forEach(r),this.h()},h(){Y(s,"class","language-html")},m(e,p){c(e,t,p),j(t,n),c(e,o,p),c(e,s,p),s.innerHTML=a},p:z,d(e){e&&r(t),e&&r(o),e&&r(s)}}}function L(l){let t,n;const o=[l[0],h];let s={$$slots:{default:[K]},$$scope:{ctx:l}};for(let a=0;a<o.length;a+=1)s=i(s,o[a]);return t=new A({props:s}),{c(){b(t.$$.fragment)},l(a){k(t.$$.fragment,a)},m(a,e){$(t,a,e),n=!0},p(a,[e]){const p=e&1?E(o,[e&1&&u(a[0]),e&0&&u(h)]):{};e&2&&(p.$$scope={dirty:e,ctx:a}),t.$set(p)},i(a){n||(S(t.$$.fragment,a),n=!0)},o(a){q(t.$$.fragment,a),n=!1},d(a){w(t,a)}}}const h={layout:"section",id:"compBindProperty",indent:!0,h:"bind:property",docs:"https://svelte.dev/docs#template-syntax-component-directives-bind-property",tutorials:["https://svelte.dev/tutorial/component-bindings"]};function M(l,t,n){return l.$$set=o=>{n(0,t=i(i({},t),m(o)))},t=m(t),[t]}class F extends v{constructor(t){super(),y(this,t,M,L,x,{})}}export{F as default,h as metadata};
