import{S as u,i as p,s as _,C as i,w as h,x as v,y as g,z as x,A as c,f as $,t as y,B as b,N as d,l as S,r as W,m as C,n as k,u as w,h as f,b as E,H as T,E as j}from"./index-37ae0623.js";import{S as q}from"./Section-6b20cdf8.js";import"./index-05d60d5f.js";import"./Tutorial-0c4825ec.js";function z(r){let e,n;return{c(){e=S("p"),n=W("The crossfade function creates a pair of transitions called send and receive. When an element is \u2018sent\u2019, it looks for a corresponding element being \u2018received\u2019, and generates a transition that transforms the element to its counterpart\u2019s position and fades it out. When an element is \u2018received\u2019, the reverse happens.")},l(s){e=C(s,"P",{});var a=k(e);n=w(a,"The crossfade function creates a pair of transitions called send and receive. When an element is \u2018sent\u2019, it looks for a corresponding element being \u2018received\u2019, and generates a transition that transforms the element to its counterpart\u2019s position and fades it out. When an element is \u2018received\u2019, the reverse happens."),a.forEach(f)},m(s,a){E(s,e,a),T(e,n)},p:j,d(s){s&&f(e)}}}function A(r){let e,n;const s=[r[0],m];let a={$$slots:{default:[z]},$$scope:{ctx:r}};for(let t=0;t<s.length;t+=1)a=i(a,s[t]);return e=new q({props:a}),{c(){h(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,o){g(e,t,o),n=!0},p(t,[o]){const l=o&1?x(s,[o&1&&c(t[0]),o&0&&c(m)]):{};o&2&&(l.$$scope={dirty:o,ctx:t}),e.$set(l)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){y(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}const m={layout:"section",id:"crossfade",indent:!0,h:"crossfade",docs:"https://svelte.dev/docs#run-time-svelte-transition-crossfade",tutorials:["https://svelte.dev/tutorial/deferred-transitions"]};function B(r,e,n){return r.$$set=s=>{n(0,e=i(i({},e),d(s)))},e=d(e),[e]}class F extends u{constructor(e){super(),p(this,e,B,A,_,{})}}export{F as default,m as metadata};
