import{S as O,i as S,s as q,C as x,w as D,x as L,y as M,z as j,A as $,q as B,o as H,B as P,N as b,e as _,t as k,k as R,c as v,a as f,h,d as u,m as z,b as A,g,H as m,E as N}from"./index-26167588.js";import{S as T}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function F(i){let t,o,n,p,a,s,r,d,c,w=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'no more alerts'</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click|once</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;handleClick&#125;</span><span class="token punctuation">></span></span>
	Click me
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>`;return{c(){t=_("p"),o=k("Listen to any event on an element with the "),n=_("code"),p=k("on:"),a=k(" directive."),s=_("br"),r=k(`
DOM event handlers can have modifiers that alter their behaviour.`),d=R(),c=_("pre"),this.h()},l(e){t=v(e,"P",{});var l=f(t);o=h(l,"Listen to any event on an element with the "),n=v(l,"CODE",{});var y=f(n);p=h(y,"on:"),y.forEach(u),a=h(l," directive."),s=v(l,"BR",{}),r=h(l,`
DOM event handlers can have modifiers that alter their behaviour.`),l.forEach(u),d=z(e),c=v(e,"PRE",{class:!0});var C=f(c);C.forEach(u),this.h()},h(){A(c,"class","language-html")},m(e,l){g(e,t,l),m(t,o),m(t,n),m(n,p),m(t,a),m(t,s),m(t,r),g(e,d,l),g(e,c,l),c.innerHTML=w},p:N,d(e){e&&u(t),e&&u(d),e&&u(c)}}}function G(i){let t,o;const n=[i[0],E];let p={$$slots:{default:[F]},$$scope:{ctx:i}};for(let a=0;a<n.length;a+=1)p=x(p,n[a]);return t=new T({props:p}),{c(){D(t.$$.fragment)},l(a){L(t.$$.fragment,a)},m(a,s){M(t,a,s),o=!0},p(a,[s]){const r=s&1?j(n,[s&1&&$(a[0]),s&0&&$(E)]):{};s&2&&(r.$$scope={dirty:s,ctx:a}),t.$set(r)},i(a){o||(B(t.$$.fragment,a),o=!0)},o(a){H(t.$$.fragment,a),o=!1},d(a){P(t,a)}}}const E={layout:"section",id:"elemOnEventname",indent:!0,h:"on:eventname",docs:"https://svelte.dev/docs#template-syntax-element-directives-on-eventname",tutorials:["https://svelte.dev/tutorial/dom-events","https://svelte.dev/tutorial/inline-handlers","https://svelte.dev/tutorial/dom-event-forwarding"]};function I(i,t,o){return i.$$set=n=>{o(0,t=x(x({},t),b(n)))},t=b(t),[t]}class V extends O{constructor(t){super(),S(this,t,I,G,q,{})}}export{V as default,E as metadata};
