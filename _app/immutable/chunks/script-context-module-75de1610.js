import{S as M,i as O,s as L,C as $,w as P,x as T,y as V,z,A as j,q as B,o as N,B as R,N as q,e as h,t as i,k as F,c as f,a as g,h as m,d as l,m as G,b as I,g as y,H as p,E as J}from"./index-26167588.js";import{S as K}from"./Section-6b147be5.js";import"./index-6967b286.js";import"./Tutorial-ee6e922e.js";function Q(d){let a,c,e,r,t,s,k,x,_,b,E,v,u,D=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// shared by all component instances</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token comment">// values above are accessible</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- HTML --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`;return{c(){a=h("p"),c=i("A "),e=h("code"),r=i("<script>"),t=i(" tag with a "),s=h("code"),k=i('context="module"'),x=i(" attribute runs once when the module first evaluates, rather than for each component instance. Values declared in this block are accessible from a regular "),_=h("code"),b=i("<script>"),E=i(" (and the component markup) but not vice versa."),v=F(),u=h("pre"),this.h()},l(o){a=f(o,"P",{});var n=g(a);c=m(n,"A "),e=f(n,"CODE",{});var w=g(e);r=m(w,"<script>"),w.forEach(l),t=m(n," tag with a "),s=f(n,"CODE",{});var C=g(s);k=m(C,'context="module"'),C.forEach(l),x=m(n," attribute runs once when the module first evaluates, rather than for each component instance. Values declared in this block are accessible from a regular "),_=f(n,"CODE",{});var S=g(_);b=m(S,"<script>"),S.forEach(l),E=m(n," (and the component markup) but not vice versa."),n.forEach(l),v=G(o),u=f(o,"PRE",{class:!0});var H=g(u);H.forEach(l),this.h()},h(){I(u,"class","language-html")},m(o,n){y(o,a,n),p(a,c),p(a,e),p(e,r),p(a,t),p(a,s),p(s,k),p(a,x),p(a,_),p(_,b),p(a,E),y(o,v,n),y(o,u,n),u.innerHTML=D},p:J,d(o){o&&l(a),o&&l(v),o&&l(u)}}}function U(d){let a,c;const e=[d[0],A];let r={$$slots:{default:[Q]},$$scope:{ctx:d}};for(let t=0;t<e.length;t+=1)r=$(r,e[t]);return a=new K({props:r}),{c(){P(a.$$.fragment)},l(t){T(a.$$.fragment,t)},m(t,s){V(a,t,s),c=!0},p(t,[s]){const k=s&1?z(e,[s&1&&j(t[0]),s&0&&j(A)]):{};s&2&&(k.$$scope={dirty:s,ctx:t}),a.$set(k)},i(t){c||(B(a.$$.fragment,t),c=!0)},o(t){N(a.$$.fragment,t),c=!1},d(t){R(a,t)}}}const A={layout:"section",id:"scriptContextModule",h:'<script context="module">',docs:"https://svelte.dev/docs#component-format-script-context-module",tutorials:["https://svelte.dev/tutorial/sharing-code","https://svelte.dev/tutorial/module-exports"]};function W(d,a,c){return d.$$set=e=>{c(0,a=$($({},a),q(e)))},a=q(a),[a]}class ta extends M{constructor(a){super(),O(this,a,W,U,L,{})}}export{ta as default,A as metadata};
